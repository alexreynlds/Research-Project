# docker-compose/orion-cygnus-sth-comet.yml

services:
  # Orion (NGSI‑v2 context broker)
  orion-v2:
    image: quay.io/fiware/orion:${ORION_VERSION}
    hostname: orion
    depends_on: [mongo-db]
    networks: [default]
    # Orion listens on 1026 in the container; map a host port from .env
    ports:
      - "${ORION_PORT:-1026}:1026"
    command: -dbhost mongo-db -logLevel DEBUG
    healthcheck:
      # Always target the container port
      test: curl --fail -s http://orion:1026/version || exit 1
      interval: 5s
      timeout: 5s
      retries: 10

  # Cygnus (persists to Mongo)
  cygnus:
    image: quay.io/fiware/cygnus-ngsi:${CYGNUS_VERSION}
    hostname: cygnus
    depends_on: [mongo-db]
    networks: [default]
    # Cygnus listens on 5080 (API) and 5051 (service) in the container
    ports:
      - "${CYGNUS_API_PORT:-5080}:5080"
      - "${CYGNUS_MONGO_SERVICE_PORT:-5051}:5051"
    environment:
      - CYGNUS_MONGO_SERVICE_PORT=5051
      - CYGNUS_MONGO_HOSTS=mongo-db:${MONGO_DB_PORT}
      - CYGNUS_SERVICE_PORT=5051
      - CYGNUS_API_PORT=5080
      - CYGNUS_LOG_LEVEL=DEBUG
    healthcheck:
      test: curl --fail -s http://cygnus:5080/v1/version || exit 1
      interval: 5s
      timeout: 5s
      retries: 10

  # STH‑Comet (Short‑Term History) reading from Mongo
  sth-comet:
    image: quay.io/fiware/sth-comet:${STH_COMET_VERSION}
    hostname: sth-comet
    depends_on: [cygnus, mongo-db]
    networks: [default]
    # STH listens on 8666 in the container
    ports:
      - "${STH_COMET_PORT:-8666}:8666"
    environment:
      - STH_HOST=0.0.0.0
      - STH_PORT=8666
      - DB_PREFIX=sth_
      - DB_URI=mongo-db:${MONGO_DB_PORT}
      - LOGOPS_LEVEL=DEBUG
    healthcheck:
      test: curl --fail -s http://sth-comet:8666/version || exit 1
      interval: 5s
      timeout: 5s
      retries: 10

  # MongoDB
  mongo-db:
    image: mongo:${MONGO_DB_VERSION}
    hostname: mongo-db
    networks: [default]
    # Mongo listens on 27017 in the container
    ports:
      - "${MONGO_DB_PORT:-27017}:27017"
    volumes:
      # Use a different host path per stack to avoid data collisions
      - ${MONGO_DATA_PATH:-~/VISTA/orion/mongodb}:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

networks:
  default:
    labels:
      org.fiware: "cabbage"
    ipam:
      config:
        # Let each stack supply its own subnet via .env to avoid overlaps
        - subnet: ${COMPOSE_SUBNET:-172.18.1.0/24}
